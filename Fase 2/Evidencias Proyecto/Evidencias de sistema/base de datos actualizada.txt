CREATE TABLE ciudad (
    id_ciudad SERIAL PRIMARY KEY,
    ciudad VARCHAR(100) NOT NULL
);

CREATE TABLE refugio (
    id_refugio SERIAL PRIMARY KEY,
    id_ciudad INTEGER REFERENCES ciudad(id_ciudad) ON DELETE CASCADE,
    nombre VARCHAR(100) NOT NULL,
    direccion VARCHAR(255),
    telefono VARCHAR(15)
);

CREATE TABLE users (
    id_user SERIAL PRIMARY KEY,
    rut VARCHAR(12) UNIQUE NOT NULL,
    nombre VARCHAR(50) NOT NULL,
    apellidos VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    direccion VARCHAR(255),
    telefono VARCHAR(15),
    ultimo_login TIMESTAMP,
    esta_activa BOOLEAN DEFAULT TRUE
);

CREATE TABLE especie (
    id_especie SERIAL PRIMARY KEY,
    especie VARCHAR(100) NOT NULL
);

CREATE TABLE raza (
    id_raza SERIAL PRIMARY KEY,
    id_especie INTEGER REFERENCES especie(id_especie) ON DELETE CASCADE,
    raza VARCHAR(100) NOT NULL
);

CREATE TABLE pets (
    id_pets SERIAL PRIMARY KEY,
    id_especie INTEGER REFERENCES especie(id_especie) ON DELETE CASCADE,
    id_raza INTEGER REFERENCES raza(id_raza) ON DELETE CASCADE,
    id_refugio INTEGER REFERENCES refugio(id_refugio) ON DELETE CASCADE,
    edad INTEGER,
    nombre VARCHAR(50) NOT NULL,
    sexo VARCHAR(10),
    descripcion TEXT,
    comentario TEXT,
    fecha_llegada DATE NOT NULL,
    disponibilidad BOOLEAN DEFAULT TRUE,
    img VARCHAR(255) -- Assuming a string path for the image
);

CREATE TABLE donaciones (
    id_donacion SERIAL PRIMARY KEY,
    id_user INTEGER REFERENCES users(id_user) ON DELETE CASCADE,
    tipo_donacion VARCHAR(50) NOT NULL,
    message TEXT,
    fecha_donacion DATE NOT NULL
);

CREATE TABLE detalle_donacion (
    id_detalleDonacion SERIAL PRIMARY KEY,
    id_donacion INTEGER REFERENCES donaciones(id_donacion) ON DELETE CASCADE,
    monto DECIMAL(10, 2) NOT NULL,
    detalle TEXT,
    tipoTarjeta VARCHAR(50)
);

CREATE TABLE adoptante (
    id_adoptante SERIAL PRIMARY KEY,
    id_user INTEGER REFERENCES users(id_user) ON DELETE CASCADE,
    id_pets INTEGER REFERENCES pets(id_pets) ON DELETE CASCADE,
    fecha_adopcion DATE NOT NULL,
    estados VARCHAR(30) CHECK (estados IN ('Proceso', 'Negado', 'Aprobado')) DEFAULT 'Proceso'
);

CREATE TABLE documentos (
    id_documento SERIAL PRIMARY KEY,
    documento VARCHAR(255) NOT NULL, -- Assuming a string path for the document
    id_adoptante INTEGER REFERENCES adoptante(id_adoptante) ON DELETE CASCADE,
    estado_documento VARCHAR(30) CHECK (estado_documento IN ('Proceso', 'Negado', 'Aprobado')) DEFAULT 'Proceso'
);

CREATE TABLE reuniones (
    id_reunion SERIAL PRIMARY KEY,
    id_adoptante INTEGER REFERENCES adoptante(id_adoptante) ON DELETE CASCADE,
    message TEXT,
    link_reunion VARCHAR(255),
    email_cliente VARCHAR(100),
    fecha_reunion DATE NOT NULL,
    hora_reunion TIME NOT NULL
);

CREATE TABLE fecha_visitas (
    id_visita SERIAL PRIMARY KEY,
    fecha_visita DATE NOT NULL,
    hora_visita TIME,
    id_user INTEGER REFERENCES users(id_user) ON DELETE CASCADE,
    id_pets INTEGER REFERENCES pets(id_pets) ON DELETE CASCADE
);

CREATE TABLE eventos (
    id_evento SERIAL PRIMARY KEY,
    imagen VARCHAR(255) NOT NULL, -- Assuming a string path for the image
    titulo VARCHAR(100),
    descripcion VARCHAR(2000),
    disponibilidad BOOLEAN DEFAULT TRUE
);

CREATE TABLE contacto (
    id_contacto SERIAL PRIMARY KEY,
    nombre VARCHAR(50),
    email VARCHAR(100) UNIQUE NOT NULL,
    asunto VARCHAR(50),
    mensaje VARCHAR(500),
    telefono VARCHAR(30),
    estado BOOLEAN DEFAULT FALSE
);
